@page "/return"
@using webapplab5.Models
@using webapplab5.Services
@inject LibraryService LibraryService

<div class="row">
    <div class="col-md-12">
        <div class="card p-4 mx-auto" style="max-width: 400px;">
            <h1>Return Book</h1>
                <label>Select User For Book Return</label>
                <select @onchange="UserChanged" class="form-select">
                    <option value="0">User</option>
                    @foreach(var user in LibraryService.users){
                        <option value=@user.Id>@user.Name</option>
                    }
                </select>
                <select @bind=bookID class="form-select">
                    <option value="0">Book</option>
                    @foreach(var valuePair in LibraryService.borrowedBooks){
                        if(valuePair.Key.Id == userID) {
                            foreach(var book in valuePair.Value){
                                <option value=@book.Id>@book.Title</option>
                            }
                        }
                    }
                </select>
            <button class="btn btn-primary mt-3 w-100" @onclick=ReturnBook>Return book</button>
            @if(!BookReturned) {
                <p class="text-danger-emphasis">@message</p>
            }
            else{
                <p class="text-success">@message</p>
            }
        </div>
    </div>
</div>
@foreach(var key in LibraryService.borrowedBooks){
    foreach(var book in key.Value){
        <p>@book.Title</p>
    }
}

@code {
    protected override async Task OnInitializedAsync(){
        if(LibraryService.users.Count == 0){
            await LibraryService.ReadUsers();
        }
        if(LibraryService.borrowedBooks.Count == 0) {
            await LibraryService.ReadBorrowedBooksFromCsv();
        }
    }
    public bool BookReturned{get; set;}
    public string message {get; set;}
    public int bookID {get; set;}
    public int userID {get; set;}

    private void UserChanged(ChangeEventArgs e) {
        userID = int.Parse(e.Value.ToString());
        StateHasChanged();
    }
    public async Task ReturnBook(){
        if(bookID == 0 || userID == 0) {
            BookReturned = false;
            message = "user id or book id is invalid";
            return;
        }
        BookReturned = await LibraryService.ReturnBook(userID, bookID);
        message = BookReturned ? "Book has been returned" : "failed to return book";
        bookID = 0;
        userID = 0;
    }
}